;; Copyright 2021-2022 Manna Harbour
;; github.com/manna-harbour/miryoku
;; generated -*- buffer-read-only: t -*-
;; target: kmonad

;; Basic definitions
(defcfg
  ;; For macOS, we need to use iokit-name
  input  (iokit-name "Apple Internal Keyboard / Trackpad")
  output (kext)
  fallthrough true
)

;; Source key layout
(defsrc
  f1   f2   f3   f4   f5        f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft up
  fn   lctl lalt lmet           spc            rmet ralt left down rght
)

;; Below, I use `around' to compose `layer-toggle' with `fn' (instead
;; of using `layer-toggle' directly) so that the `fn' keypress
;; actually gets emitted. This matters when using an application that
;; can use `fn' as a modifier (like Emacs).

(defalias fn (around (layer-toggle function) fn))

;; Utility definitions
(defalias
  mt-a (tap-hold-next-release 187 a lmet)
  mt-r (tap-hold-next-release 187 r lalt)
  mt-s (tap-hold-next-release 187 s lctl)
  mt-t (tap-hold-next-release 187 t lsft)
  
  mt-n (tap-hold-next-release 187 n rsft)
  mt-e (tap-hold-next-release 187 e rctl)
  mt-i (tap-hold-next-release 187 i ralt)
  mt-o (tap-hold-next-release 187 o rmet)
  
  ;; Layer toggle definitions
  lt-nav (layer-toggle nav)
  lt-mouse (layer-toggle mouse)
  lt-media (layer-toggle media)
  lt-num (layer-toggle num)
  lt-sym (layer-toggle sym)
  lt-fun (layer-toggle fun)

  ;; Space as navigation layer when held
  spc-nav (tap-hold-next-release 187 spc @lt-nav)
)

;; Base layer
(deflayer base
  brdn brup lp   mctl bldn      blup prev pp   next mute vold volu
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    f    p    g    j    l    u    y    ;    [    ]    \
  caps @mt-a @mt-r @mt-s @mt-t d h    @mt-n @mt-e @mt-i @mt-o '    ret
  lsft z    x    c    v    b    k    m    ,    .    /    rsft up
  @fn   lctl lalt lmet           @spc-nav            rmet ralt left down rght
)

;; Navigation layer
(deflayer nav
  _    _    _    _    _         _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    up   _    _    _    home up   end  pgup _    _    _
  _    _    left down right _    _    left down right pgdn _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _              _              _    _    _    _    _
)

;; Mouse layer
(deflayer mouse
  _    _    _    _    _         _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _              _              _    _    _    _    _
)

;; Media layer
(deflayer media
  _    _    _    _    _         _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    volu _    _    _    _    _    _    _    _    _    _
  _    _    prev vold next _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _              _              _    _    _    _    _
)

;; Number layer
(deflayer num
  _    _    _    _    _         _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    7    8    9    _    _    _    _    _    _    _    _    _
  _    _    4    5    6    _    _    _    _    _    _    _    _
  _    1    2    3    _    _    _    _    _    _    _    _    _
  _    _    _    _              0              _    _    _    _    _
)

;; Symbol layer
(deflayer sym
  _    _    _    _    _         _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    &    *    \(   _    _    _    _    _    _    _    _    _
  _    _    $    %    ^    _    _    _    _    _    _    _    _
  _    !    @    #    _    _    _    _    _    _    _    _    _
  _    _    _    _              _              _    _    _    _    _
)

;; Function layer
(deflayer fun
  _    _    _    _    _         _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    f7   f8   f9   _    _    _    _    _    _    _    _    _
  _    _    f4   f5   f6   _    _    _    _    _    _    _    _
  _    f1   f2   f3   _    _    _    _    _    _    _    _    _
  _    _    _    _              f10             _    _    _    _    _
) 